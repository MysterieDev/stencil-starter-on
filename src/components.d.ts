/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MyObj } from "./utils/interfaces";
export namespace Components {
    interface ExampleComponent {
        "exampleProp": string;
        "exampleToUpperCase": () => Promise<void>;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface OnTest {
        "countUpTimesClicked": () => Promise<void>;
        "getComponentDimensions": () => Promise<number>;
        "isBold": boolean;
        "myArray": number[];
        "myObj": MyObj;
    }
}
declare global {
    interface HTMLExampleComponentElement extends Components.ExampleComponent, HTMLStencilElement {
    }
    var HTMLExampleComponentElement: {
        prototype: HTMLExampleComponentElement;
        new (): HTMLExampleComponentElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLOnTestElement extends Components.OnTest, HTMLStencilElement {
    }
    var HTMLOnTestElement: {
        prototype: HTMLOnTestElement;
        new (): HTMLOnTestElement;
    };
    interface HTMLElementTagNameMap {
        "example-component": HTMLExampleComponentElement;
        "my-component": HTMLMyComponentElement;
        "on-test": HTMLOnTestElement;
    }
}
declare namespace LocalJSX {
    interface ExampleComponent {
        "exampleProp"?: string;
        "onExampleEvent"?: (event: CustomEvent<string>) => void;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface OnTest {
        "isBold"?: boolean;
        "myArray"?: number[];
        "myObj"?: MyObj;
        "onMyCustomEvent"?: (event: CustomEvent<string>) => void;
    }
    interface IntrinsicElements {
        "example-component": ExampleComponent;
        "my-component": MyComponent;
        "on-test": OnTest;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "example-component": LocalJSX.ExampleComponent & JSXBase.HTMLAttributes<HTMLExampleComponentElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "on-test": LocalJSX.OnTest & JSXBase.HTMLAttributes<HTMLOnTestElement>;
        }
    }
}
